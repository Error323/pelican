namespace pelican {

/**
\page user_conclusion Tutorial Conclusion

In this section we conclude the tutorial and put all the examples together
to create applications that use the Pelican library.

\section conclusion_emulator The Emulator Binary

\include mainEmulator.cpp

\subsection conclusion_pipelineRunning Running the Emulator

The emulator can be started simply by running the <code> ./signalEmulator
</code> binary.

\section conclusion_server The Server Binary

\include mainServer.cpp

\subsection conclusion_serverXml Server XML

\verbinclude serverConfig.xml

\subsection conclusion_serverRunning Running the Server

The server can be started with the following command, specifying the correct
path to the server configuration file:

\verbatim
./signalServer tutorial/data/serverConfig.xml
\endverbatim

\section conclusion_pipeline The Pipeline Binary

\include mainPipeline.cpp

\subsection conclusion_pipelineXml Pipeline XML

\verbinclude pipelineConfig.xml

\subsection conclusion_pipelineRunning Running the Pipeline

The pipeline can be started with the following command, specifying the correct
path to the pipeline configuration file:

\verbatim
./signalPipeline tutorial/data/pipelineConfig.xml
\endverbatim

\section conclusion_pipelineDataOutput Data Output

The following figure shows example output from the signal processing pipeline
constructed for our tutorial. It was created by plotting the contents of the
CSV files using gnuplot with this script:

\verbinclude plotScript.gnu

\image html images/pelican-output.png "Pelican Output"
\image latex images/pelican-output.eps "Pelican Output" width=10cm


\latexonly
\clearpage
\endlatexonly

*/

}
